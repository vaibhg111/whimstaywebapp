<html>

<head>
  <title>Place Autocomplete Address Form</title>
  <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
  <meta charset="utf-8">
  <style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
      height: 50%;
      width: 50%;
    }

    /* Optional: Makes the sample page fill the window. */
    /* html, */
    /* body {
      height: 100%;
      margin: 0;
      padding: 0;
    } */
  </style>
  <!-- <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500"> -->
  <style>
    /* #locationField,
    #controls {
      position: relative;
      width: 480px;
    }

    #autocomplete {
      position: absolute;
      top: 0px;
      left: 0px;
      width: 99%;
    }

    #map {
      height: 100%;
    }

    .label {
      text-align: right;
      font-weight: bold;
      width: 100px;
      color: #303030;
    }

    #address {
      border: 1px solid #000090;
      background-color: #f0f0ff;
      width: 480px;
      padding-right: 2px;
    }

    #address td {
      font-size: 10pt;
    }

    .field {
      width: 99%;
    }

    .slimField {
      width: 80px;
    }

    .wideField {
      width: 200px;
    }

    #locationField {
      height: 20px;
      margin-bottom: 2px;
    } */
  </style>
</head>

<body>
  <div id="locationField">
    <input id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" type="text">
  </div>

  <table id="address">
    <tr>
      <td class="label">Street address</td>
      <td class="slimField"><input class="field" id="street_number" disabled="true"></td>
      <td class="wideField" colspan="2"><input class="field" id="route" disabled="true"></td>
    </tr>
    <tr>
      <td class="label">City</td>
     
      <td class="wideField" colspan="3"><input class="field" id="locality" disabled="true"></td>
    </tr>
  
    <tr>
      <td class="label">State</td>
      <td class="slimField"><input class="field" id="administrative_area_level_1" disabled="true"></td>
      <td class="label">Zip code</td>
      <td class="wideField"><input class="field" id="postal_code" disabled="true"></td>
    </tr>
    <tr>
      <td class="label">Country</td>
      <td class="wideField" colspan="3"><input class="field" id="country" disabled="true"></td>
    </tr>


  </table>
  <div id="map"></div>



<script>
   var placeSearch, autocomplete;
    var componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };

     function initAutocomplete() {
  
  autocomplete = new google.maps.places.Autocomplete(
        /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
    { types: ['geocode'] });

}
 

  function geolocate() {


    
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 13
    });
    var card = document.getElementById('pac-card');
    var input = document.getElementById('autocomplete');
    var types = document.getElementById('type-selector');
    var strictBounds = document.getElementById('strict-bounds-selector');

    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);

    var autocomplete = new google.maps.places.Autocomplete(input);

    autocomplete.bindTo('bounds', map);

    
    autocomplete.setFields(
        ['address_components', 'geometry', 'icon', 'name']);

    var infowindow = new google.maps.InfoWindow();
    var infowindowContent = document.getElementById('infowindow-content');
    infowindow.setContent(infowindowContent);
    var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
    });

    autocomplete.addListener('place_changed', function() {

      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();

      for (var component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
      }

      
      // and fill the corresponding field on the form.
      for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
          var val = place.address_components[i][componentForm[addressType]];
          document.getElementById(addressType).value = val;
        }
      }
   
      if (!place.geometry) {
        // User entered the name of a Place that was not suggested and
        // pressed the Enter key, or the Place Details request failed.
        window.alert("No details available for input: '" + place.name + "'");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);

      var address = '';
      if (place.address_components) {
        address = [
          (place.address_components[0] && place.address_components[0].short_name || ''),
          (place.address_components[1] && place.address_components[1].short_name || ''),
          (place.address_components[2] && place.address_components[2].short_name || '')
        ].join(' ');
      }

  
    });

   
  }
</script>


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCB_eHRb6TGgBI_6OD-tp4MwRSIQ9BBazE&libraries=places&callback=initAutocomplete" async defer></script>
</body>

</html>